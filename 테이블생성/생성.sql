-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- TT_MAJOR Table Create SQL
CREATE TABLE TT_MAJOR
(
    MAJOR_NO      INT              NOT NULL, 
    MAJOR_NAME    VARCHAR2(100)    NOT NULL, 
     PRIMARY KEY (MAJOR_NO)
)
/

COMMENT ON TABLE TT_MAJOR IS '전공'
/

COMMENT ON COLUMN TT_MAJOR.MAJOR_NO IS '전공번호'
/

COMMENT ON COLUMN TT_MAJOR.MAJOR_NAME IS '전공이름'
/


-- TT_CLASS Table Create SQL
CREATE TABLE TT_CLASS
(
    CLASS_NO      INT              NOT NULL, 
    MAJOR_NO      VARCHAR2(100)    NOT NULL, 
    CLASS_NAME    VARCHAR2(100)    NOT NULL, 
    CREDIT        INT              NOT NULL, 
    TIME          INT              NOT NULL, 
     PRIMARY KEY (CLASS_NO, MAJOR_NO)
)
/

COMMENT ON TABLE TT_CLASS IS '수업'
/

COMMENT ON COLUMN TT_CLASS.CLASS_NO IS '수업번호'
/

COMMENT ON COLUMN TT_CLASS.MAJOR_NO IS '전공번호'
/

COMMENT ON COLUMN TT_CLASS.CLASS_NAME IS '수업이름'
/

COMMENT ON COLUMN TT_CLASS.CREDIT IS '학점'
/

COMMENT ON COLUMN TT_CLASS.TIME IS '시간'
/




CREATE SEQUENCE TT_CLASS_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TT_CLASS_AI_TRG
BEFORE INSERT ON TT_CLASS
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TT_CLASS_SEQ.NEXTVAL
    INTO :NEW.class_no
    FROM DUAL;
END;
/



CREATE SEQUENCE TT_MAJOR_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TT_MAJOR_AI_TRG
BEFORE INSERT ON TT_MAJOR
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TT_MAJOR_SEQ.NEXTVAL
    INTO :NEW.major_no
    FROM DUAL;
END;
/

